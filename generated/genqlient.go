// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package generated

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// CreatePostgresNeonResourceCreatePostgresNeonResource includes the requested fields of the GraphQL type PostgresNeonResource.
type CreatePostgresNeonResourceCreatePostgresNeonResource struct {
	Id string `json:"id"`
}

// GetId returns CreatePostgresNeonResourceCreatePostgresNeonResource.Id, and is useful for accessing the field via an interface.
func (v *CreatePostgresNeonResourceCreatePostgresNeonResource) GetId() string { return v.Id }

// CreatePostgresNeonResourceResponse is returned by CreatePostgresNeonResource on success.
type CreatePostgresNeonResourceResponse struct {
	CreatePostgresNeonResource CreatePostgresNeonResourceCreatePostgresNeonResource `json:"createPostgresNeonResource"`
}

// GetCreatePostgresNeonResource returns CreatePostgresNeonResourceResponse.CreatePostgresNeonResource, and is useful for accessing the field via an interface.
func (v *CreatePostgresNeonResourceResponse) GetCreatePostgresNeonResource() CreatePostgresNeonResourceCreatePostgresNeonResource {
	return v.CreatePostgresNeonResource
}

// __CreatePostgresNeonResourceInput is used internally by genqlient
type __CreatePostgresNeonResourceInput struct {
	DeploymentId string `json:"deploymentId"`
}

// GetDeploymentId returns __CreatePostgresNeonResourceInput.DeploymentId, and is useful for accessing the field via an interface.
func (v *__CreatePostgresNeonResourceInput) GetDeploymentId() string { return v.DeploymentId }

// The query or mutation executed by CreatePostgresNeonResource.
const CreatePostgresNeonResource_Operation = `
mutation CreatePostgresNeonResource ($deploymentId: ID!) {
	createPostgresNeonResource(input: {deploymentId:$deploymentId}) {
		id
	}
}
`

func CreatePostgresNeonResource(
	ctx context.Context,
	client graphql.Client,
	deploymentId string,
) (*CreatePostgresNeonResourceResponse, error) {
	req := &graphql.Request{
		OpName: "CreatePostgresNeonResource",
		Query:  CreatePostgresNeonResource_Operation,
		Variables: &__CreatePostgresNeonResourceInput{
			DeploymentId: deploymentId,
		},
	}
	var err error

	var data CreatePostgresNeonResourceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
